// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorldOfStore.Models;

namespace WorldOfStore.Migrations
{
    [DbContext(typeof(AllContext))]
    [Migration("20200924061948_testconnect")]
    partial class testconnect
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WorldOfStore.Models.Order", b =>
                {
                    b.Property<long>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("KundeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrderID1")
                        .HasColumnType("bigint");

                    b.HasKey("OrderID");

                    b.HasIndex("OrderID1");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("WorldOfStore.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pris")
                        .HasColumnType("int");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("WorldOfStore.Models.ProductVariant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Difficulty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<long?>("ProductVariantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductVariantId");

                    b.ToTable("ProductVariant");
                });

            modelBuilder.Entity("WorldOfStore.Models.User", b =>
                {
                    b.Property<long>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<long?>("UserID1")
                        .HasColumnType("bigint");

                    b.Property<string>("UserMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("UserID1");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WorldOfStore.Models.Order", b =>
                {
                    b.HasOne("WorldOfStore.Models.Order", null)
                        .WithMany("order")
                        .HasForeignKey("OrderID1");
                });

            modelBuilder.Entity("WorldOfStore.Models.Product", b =>
                {
                    b.HasOne("WorldOfStore.Models.Product", null)
                        .WithMany("Products")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("WorldOfStore.Models.ProductVariant", b =>
                {
                    b.HasOne("WorldOfStore.Models.ProductVariant", null)
                        .WithMany("productVariant")
                        .HasForeignKey("ProductVariantId");
                });

            modelBuilder.Entity("WorldOfStore.Models.User", b =>
                {
                    b.HasOne("WorldOfStore.Models.User", null)
                        .WithMany("Users")
                        .HasForeignKey("UserID1");
                });
#pragma warning restore 612, 618
        }
    }
}
